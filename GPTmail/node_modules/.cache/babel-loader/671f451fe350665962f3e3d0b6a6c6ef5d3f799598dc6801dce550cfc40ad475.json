{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted } from 'vue';\nimport MessageRow from \"@/components/MessageRow.vue\";\nimport IconComponent from '@/components/IconComponent.vue';\nimport { useUserStore } from \"@/store/user-store\";\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const userStore = useUserStore();\n    let emailsToDelete = [];\n    onMounted(() => {\n      userStore.getEmailsByEmailAddress();\n    });\n    const selectedId = e => {\n      if (!emailsToDelete.length) {\n        emailsToDelete.push(e.id);\n      } else if (e.bool && !emailsToDelete.includes(e.id)) {\n        emailsToDelete.push(e.id);\n      } else if (!e.bool && emailsToDelete.includes(e.id)) {\n        const index = emailsToDelete.indexOf(e.id);\n        if (index > -1) {\n          emailsToDelete.splice(index, 1);\n        }\n      }\n    };\n    const deleteSelected = () => {\n      if (!emailsToDelete.length) return;\n      let res = confirm(\"Are you sure you want to delete the selected emails?\");\n      if (res) {\n        emailsToDelete.forEach(async id => {\n          await userStore.deleteEmail(id);\n        });\n        emailsToDelete = [];\n      }\n    };\n    const __returned__ = {\n      userStore,\n      get emailsToDelete() {\n        return emailsToDelete;\n      },\n      set emailsToDelete(v) {\n        emailsToDelete = v;\n      },\n      selectedId,\n      deleteSelected,\n      onMounted,\n      MessageRow,\n      IconComponent,\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AAiCE,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,YAAY,QAAQ,oBAAoB;;;;;;;IACjD,MAAMC,SAAS,GAAGD,YAAY,EAAE;IAEhC,IAAIE,cAAc,GAAG,EAAE;IAEvBL,SAAS,CAAC,MAAM;MACdI,SAAS,CAACE,uBAAuB,EAAE;IACrC,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAIC,CAAC,IAAK;MACxB,IAAI,CAACH,cAAc,CAACI,MAAM,EAAE;QAC1BJ,cAAc,CAACK,IAAI,CAACF,CAAC,CAACG,EAAE,CAAC;MAC3B,CAAC,MAAM,IAAIH,CAAC,CAACI,IAAI,IAAI,CAACP,cAAc,CAACQ,QAAQ,CAACL,CAAC,CAACG,EAAE,CAAC,EAAE;QACnDN,cAAc,CAACK,IAAI,CAACF,CAAC,CAACG,EAAE,CAAC;MAC3B,CAAC,MAAM,IAAI,CAACH,CAAC,CAACI,IAAI,IAAIP,cAAc,CAACQ,QAAQ,CAACL,CAAC,CAACG,EAAE,CAAC,EAAE;QACnD,MAAMG,KAAK,GAAGT,cAAc,CAACU,OAAO,CAACP,CAAC,CAACG,EAAE,CAAC;QAC1C,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAE;UACdT,cAAc,CAACW,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;QACjC;MACF;IACF,CAAC;IAED,MAAMG,cAAc,GAAG,MAAM;MAC3B,IAAI,CAACZ,cAAc,CAACI,MAAM,EAAE;MAE5B,IAAIS,GAAG,GAAGC,OAAO,CAAC,sDAAsD,CAAC;MACzE,IAAID,GAAG,EAAE;QACPb,cAAc,CAACe,OAAO,CAAC,MAAMT,EAAE,IAAI;UACjC,MAAMP,SAAS,CAACiB,WAAW,CAACV,EAAE,CAAC;QACjC,CAAC,CAAC;QAEFN,cAAc,GAAG,EAAE;MACrB;IACF,CAAC","names":["onMounted","MessageRow","IconComponent","useUserStore","userStore","emailsToDelete","getEmailsByEmailAddress","selectedId","e","length","push","id","bool","includes","index","indexOf","splice","deleteSelected","res","confirm","forEach","deleteEmail"],"sources":["/home/hl_tang/Code/VSCodeWorkSpace/GPTmail/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"HomeView\" class=\"w-full bg-white ml-2 rounded-t-xl h-full shadow-sm\">\n\n    <div class=\"border-b\">\n      <div class=\"flex items-center justify-between px-4 my-3\">\n        <IconComponent\n          @click=\"deleteSelected\"\n          class=\"-m-2 -ml-2.5\"\n          iconString=\"trash\"\n          :iconSize=\"19\"\n          iconColor=\"#636363\"\n          text=\"Delete selected\"\n          hoverColor=\"hover:bg-gray-100\"\n        />\n        <div class=\"text-xs text-gray-500\">1-50 of 153</div>\n      </div>\n    </div>\n\n    <div v-for=\"email in userStore.emails\" :key=\"email\">\n        <MessageRow\n          :id=\"email.id\"\n          :from=\"email.firstName + ' ' + email.lastName\"\n          :subject=\"email.subject\"\n          :body=\"email.body\"\n          :time=\"email.createdAt\"\n          :hasViewed=\"email.hasViewed\"\n          @selectedId=\"selectedId\"\n        />\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted } from 'vue'\n  import MessageRow from \"@/components/MessageRow.vue\";\n  import IconComponent from '@/components/IconComponent.vue';\n  import { useUserStore } from \"@/store/user-store\";\n  const userStore = useUserStore()\n\n  let emailsToDelete = []\n\n  onMounted(() => {\n    userStore.getEmailsByEmailAddress()\n  })\n\n  const selectedId = (e) => {\n    if (!emailsToDelete.length) {\n      emailsToDelete.push(e.id)\n    } else if (e.bool && !emailsToDelete.includes(e.id)) {\n      emailsToDelete.push(e.id)\n    } else if (!e.bool && emailsToDelete.includes(e.id)) {\n      const index = emailsToDelete.indexOf(e.id);\n      if (index > -1) { \n        emailsToDelete.splice(index, 1); \n      }\n    }\n  }\n\n  const deleteSelected = () => {\n    if (!emailsToDelete.length) return\n    \n    let res = confirm(\"Are you sure you want to delete the selected emails?\");\n    if (res) { \n      emailsToDelete.forEach(async id => {\n        await userStore.deleteEmail(id)\n      })\n\n      emailsToDelete = []\n    }\n  }\n\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}