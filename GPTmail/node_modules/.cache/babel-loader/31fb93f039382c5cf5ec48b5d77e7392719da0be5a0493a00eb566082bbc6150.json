{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  id: \"IconComponent\"\n};\nconst _hoisted_2 = [\"data-tooltip-target\"];\nconst _hoisted_3 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.iconString ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"flex items-center justify-center rounded-full cursor-pointer w-10 h-10\", [$setup.hoverColor]]),\n    \"data-tooltip-target\": `tooltip-no-arrow-${$setup.iconString}`,\n    \"data-tooltip-placement\": \"bottom\"\n  }, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.icon), {\n    size: $props.iconSize,\n    fillColor: $setup.iconColor\n  }, null, 8 /* PROPS */, [\"size\", \"fillColor\"]))], 10 /* CLASS, PROPS */, _hoisted_2), _createElementVNode(\"div\", {\n    id: `tooltip-no-arrow-${$setup.iconString}`,\n    role: \"tooltip\",\n    class: \"inline-block absolute invisible text-xs z-10 py-1 px-2 font-medium text-white rounded-sm shadow-sm opacity-0 tooltip dark:bg-gray-600 delay-150\"\n  }, _toDisplayString($setup.text), 9 /* TEXT, PROPS */, _hoisted_3)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACOA,EAAE,EAAC;;;;;SAAsBC,iBAAU,kBAAxCC,oBAyCM,OAzCNC,UAyCM,GAxCJC,oBAeM;IAdJC,KAAK,mBAAC,wEAQL,GACQJ,iBAAU;IAClB,qBAAmB,sBAAsBA,iBAAU;IACpD,wBAAsB,EAAC;qBAEvBK,aAA+DC,yBAA/CN,WAAI;IAAGO,IAAI,EAAEC,eAAQ;IAAGC,SAAS,EAAET;wFAGrDG,oBAsBM;IArBHJ,EAAE,sBAAsBC,iBAAU;IACnCU,IAAI,EAAC,SAAS;IACdN,KAAK,EAAC;sBAkBDJ,WAAI","names":["id","$setup","_createElementBlock","_hoisted_1","_createElementVNode","class","_createBlock","_resolveDynamicComponent","size","$props","fillColor","role"],"sourceRoot":"","sources":["/home/hl_tang/Code/VSCodeWorkSpace/GPTmail/src/components/IconComponent.vue"],"sourcesContent":["<template>\n  <div id=\"IconComponent\" v-if=\"iconString\">\n    <div \n      class=\"\n        flex \n        items-center \n        justify-center \n        rounded-full \n        cursor-pointer\n        w-10 \n        h-10  \n      \"\n      :class=\"[hoverColor]\"\n      :data-tooltip-target=\"`tooltip-no-arrow-${iconString}`\"\n      data-tooltip-placement=\"bottom\"\n    >\n      <component :is=\"icon\" :size=\"iconSize\" :fillColor=\"iconColor\"/>\n    </div>\n\n    <div \n      :id=\"`tooltip-no-arrow-${iconString}`\" \n      role=\"tooltip\" \n      class=\"\n        inline-block \n        absolute \n        invisible \n        text-xs \n        z-10 \n        py-1 \n        px-2 \n        font-medium \n        text-white \n        rounded-sm \n        shadow-sm \n        opacity-0 \n        tooltip \n        dark:bg-gray-600\n        delay-150\n      \"\n    >\n        {{ text }}\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { defineProps, toRefs } from \"vue\";\n  import MenuIcon from \"vue-material-design-icons/Menu.vue\";\n  <el-icon><Minus /></el-icon>\n  import MagnifyIcon from \"vue-material-design-icons/Magnify.vue\";\n  import TuneIcon from \"vue-material-design-icons/Tune.vue\";\n  import HelpIcon from \"vue-material-design-icons/Help.vue\";\n  import CogOutlineIcon from \"vue-material-design-icons/CogOutline.vue\";\n  import AppsIcon from \"vue-material-design-icons/Apps.vue\";\n  import ArrowLeftIcon from \"vue-material-design-icons//ArrowLeft.vue\";\n  import TrashCanOutlineIcon from \"vue-material-design-icons//TrashCanOutline.vue\";\n\n  const props = defineProps({\n    iconString: String,\n    iconColor: String,\n    iconSize: Number,\n    text: String,\n    hoverColor: String,\n  })\n  const { iconString, iconColor, text, hoverColor } = toRefs(props)\n\n  let icon = null\n\n  if (iconString.value === 'menu') {\n    icon = MenuIcon\n  }\n\n  if (iconString.value === 'magnify') {\n    icon = MagnifyIcon\n  }\n\n  if (iconString.value === 'tune') {\n    icon = TuneIcon\n  }\n\n  if (iconString.value === 'help') {\n    icon = HelpIcon\n  }\n\n  if (iconString.value === 'cog') {\n    icon = CogOutlineIcon\n  }\n\n  if (iconString.value === 'apps') {\n    icon = AppsIcon\n  }\n\n  if (iconString.value === 'back') {\n    icon = ArrowLeftIcon\n  }\n\n  if (iconString.value === 'trash') {\n    icon = TrashCanOutlineIcon\n  }\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}