{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"HomeView\",\n  class: \"w-full bg-white ml-2 rounded-t-xl h-full shadow-sm\"\n};\nconst _hoisted_2 = {\n  class: \"border-b\"\n};\nconst _hoisted_3 = {\n  class: \"flex items-center justify-between px-4 my-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-xs text-gray-500\"\n}, \"1-50 of 150\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"IconComponent\"], {\n    onClick: $setup.deleteSelected,\n    class: \"-m-2 -ml-2.5\",\n    iconString: \"trash\",\n    iconSize: 19,\n    iconColor: \"#636363\",\n    text: \"Delete selected\",\n    hoverColor: \"hover:bg-gray-100\"\n  }), _hoisted_4])]), _createElementVNode(\"div\", null, [_createVNode($setup[\"MessageRow\"], {\n    from: \"aaa@bbb.com\",\n    subject: \"Test row 1\",\n    body: \"aaaaaa\",\n    time: \"2023/5/16 09:46\"\n  })]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.userStore.emails, email => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: email\n    }, [_createVNode($setup[\"MessageRow\"], {\n      id: email.id,\n      from: email.firstName + ' ' + email.lastName,\n      subject: email.subject,\n      body: email.body,\n      time: email.createdAt,\n      hasViewed: email.hasViewed,\n      onSelectedId: $setup.selectedId\n    }, null, 8 /* PROPS */, [\"id\", \"from\", \"subject\", \"body\", \"time\", \"hasViewed\"])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC,UAAU;EAACC,KAAK,EAAC;;;EAElBA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAA6C;gCAUtDC,oBAAoD;EAA/CD,KAAK,EAAC;AAAuB,GAAC,aAAW;;;uBAbpDE,oBAqCM,OArCNC,UAqCM,GAnCJF,oBAaM,OAbNG,UAaM,GAZJH,oBAWM,OAXNI,UAWM,GAVJC,aAQEC;IAPCC,OAAK,EAAED,qBAAc;IACtBP,KAAK,EAAC,cAAc;IACpBS,UAAU,EAAC,OAAO;IACjBC,QAAQ,EAAE,EAAE;IACbC,SAAS,EAAC,SAAS;IACnBC,IAAI,EAAC,iBAAiB;IACtBC,UAAU,EAAC;MAEbC,UAAoD,MAIxDb,oBAOM,cANJK,aAKEC;IAJAQ,IAAI,EAAC,aAAa;IAClBC,OAAO,EAAC,YAAY;IACpBC,IAAI,EAAC,QAAQ;IACbC,IAAI,EAAC;2BAIThB,oBAUMiB,6BAVeZ,gBAAS,CAACa,MAAM,EAAzBC,KAAK;yBAAjBnB,oBAUM;MAVkCoB,GAAG,EAAED;IAAK,IAC9Cf,aAQEC;MAPCR,EAAE,EAAEsB,KAAK,CAACtB,EAAE;MACZgB,IAAI,EAAEM,KAAK,CAACE,SAAS,SAASF,KAAK,CAACG,QAAQ;MAC5CR,OAAO,EAAEK,KAAK,CAACL,OAAO;MACtBC,IAAI,EAAEI,KAAK,CAACJ,IAAI;MAChBC,IAAI,EAAEG,KAAK,CAACI,SAAS;MACrBC,SAAS,EAAEL,KAAK,CAACK,SAAS;MAC1BC,YAAU,EAAEpB","names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","$setup","onClick","iconString","iconSize","iconColor","text","hoverColor","_hoisted_4","from","subject","body","time","_Fragment","emails","email","key","firstName","lastName","createdAt","hasViewed","onSelectedId"],"sourceRoot":"","sources":["/home/hl_tang/Code/VSCodeWorkSpace/GPTmail/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"HomeView\" class=\"w-full bg-white ml-2 rounded-t-xl h-full shadow-sm\">\n\n    <div class=\"border-b\">\n      <div class=\"flex items-center justify-between px-4 my-3\">\n        <IconComponent\n          @click=\"deleteSelected\"\n          class=\"-m-2 -ml-2.5\"\n          iconString=\"trash\"\n          :iconSize=\"19\"\n          iconColor=\"#636363\"\n          text=\"Delete selected\"\n          hoverColor=\"hover:bg-gray-100\"\n        />\n        <div class=\"text-xs text-gray-500\">1-50 of 150</div>\n      </div>\n    </div>\n\n    <div>\n      <MessageRow\n        from=\"aaa@bbb.com\"\n        subject=\"Test row 1\"\n        body=\"aaaaaa\"\n        time=\"2023/5/16 09:46\"\n      />\n    </div>\n\n    <div v-for=\"email in userStore.emails\" :key=\"email\">\n        <MessageRow\n          :id=\"email.id\"\n          :from=\"email.firstName + ' ' + email.lastName\"\n          :subject=\"email.subject\"\n          :body=\"email.body\"\n          :time=\"email.createdAt\"\n          :hasViewed=\"email.hasViewed\"\n          @selectedId=\"selectedId\"\n        />\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted } from 'vue'\n  import MessageRow from \"@/components/MessageRow.vue\";\n  import IconComponent from '@/components/IconComponent.vue';\n  import { useUserStore } from \"@/store/user-store\";\n  const userStore = useUserStore()\n\n  let emailsToDelete = []\n\n  onMounted(() => {\n    userStore.getEmailsByEmailAddress()\n  })\n\n  const selectedId = (e) => {\n    if (!emailsToDelete.length) {\n      emailsToDelete.push(e.id)\n    } else if (e.bool && !emailsToDelete.includes(e.id)) {\n      emailsToDelete.push(e.id)\n    } else if (!e.bool && emailsToDelete.includes(e.id)) {\n      const index = emailsToDelete.indexOf(e.id);\n      if (index > -1) { \n        emailsToDelete.splice(index, 1); \n      }\n    }\n  }\n\n  const deleteSelected = () => {\n    if (!emailsToDelete.length) return\n    \n    let res = confirm(\"Are you sure you want to delete the selected emails?\");\n    if (res) { \n      emailsToDelete.forEach(async id => {\n        await userStore.deleteEmail(id)\n      })\n\n      emailsToDelete = []\n    }\n  }\n\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}