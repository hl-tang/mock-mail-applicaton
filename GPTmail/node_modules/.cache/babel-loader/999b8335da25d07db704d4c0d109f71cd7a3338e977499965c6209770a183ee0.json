{"ast":null,"code":"import { toRefs, watch, ref } from \"vue\";\nimport CheckboxOutlineIcon from \"vue-material-design-icons/CheckboxOutline.vue\";\nimport CheckboxBlankOutlineIcon from \"vue-material-design-icons/CheckboxBlankOutline.vue\";\nimport StarOutlineIcon from \"vue-material-design-icons/StarOutline.vue\";\nexport default {\n  __name: 'MessageRow',\n  props: {\n    id: String,\n    from: String,\n    subject: String,\n    body: String,\n    time: String,\n    hasViewed: Boolean\n  },\n  emits: ['selectedId'],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    let isSelected = ref(false);\n    const {\n      id,\n      from,\n      subject,\n      body,\n      time\n    } = toRefs(props);\n    watch(isSelected, bool => {\n      emit('selectedId', {\n        id: id.value,\n        bool: bool\n      });\n    });\n    const __returned__ = {\n      emit,\n      get isSelected() {\n        return isSelected;\n      },\n      set isSelected(v) {\n        isSelected = v;\n      },\n      props,\n      id,\n      from,\n      subject,\n      body,\n      time,\n      toRefs,\n      watch,\n      ref,\n      CheckboxOutlineIcon,\n      CheckboxBlankOutlineIcon,\n      StarOutlineIcon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAqDA,SAAmCA,MAAM,EAAEC,KAAK,EAAEC,GAAG,QAAQ,KAAK;AAClE,OAAOC,mBAAmB,MAAM,+CAA+C;AAC/E,OAAOC,wBAAwB,MAAM,oDAAoD;AACzF,OAAOC,eAAe,MAAM,2CAA2C;;;;;;;;;;;;;;;;;;IAIvE,IAAIC,UAAU,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAW3B,MAAM;MAAEK,EAAE;MAAEC,IAAI;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAAK,CAAC,GAAGX,MAAM,CAACY,KAAK,CAAC;IAEvDX,KAAK,CAACK,UAAU,EAAGO,IAAI,IAAK;MACxBC,IAAI,CAAC,YAAY,EAAE;QAAEP,EAAE,EAAEA,EAAE,CAACQ,KAAK;QAAEF,IAAI,EAAEA;MAAI,CAAC,CAAC;IACnD,CAAC,CAAC","names":["toRefs","watch","ref","CheckboxOutlineIcon","CheckboxBlankOutlineIcon","StarOutlineIcon","isSelected","id","from","subject","body","time","props","bool","emit","value"],"sources":["/home/hl_tang/Code/VSCodeWorkSpace/GPTmail/src/components/MessageRow.vue"],"sourcesContent":["<template>\n    <div id=\"MessageRow\">\n        <div \n            class=\"\n                border-b \n                hover:border-gray-200 \n                hover:border-t \n                hover:border-y-2 \n                hover:border-x\n                cursor-pointer\n            \"\n            :class=\"[hasViewed ? 'bg-gray-100' : '']\"\n        >\n            <div class=\"flex items-center px-4 py-2\">\n            \n                <div class=\"flex items-center\">\n                    <component \n                        :is=\"isSelected ? CheckboxOutlineIcon : CheckboxBlankOutlineIcon\"\n                        @click=\"isSelected = !isSelected\" \n                        :size=\"19\" \n                        fillColor=\"#636363\" \n                    />\n                    <StarOutlineIcon :size=\"17\" fillColor=\"#636363\" class=\"ml-4\" />\n                </div>\n\n                <div class=\"flex items-center w-full\">\n                    <router-link :to=\"`/email/message/${id}`\" class=\"w-full\">\n\n                        <div class=\"flex justify-between items-center\">\n                            <div class=\"flex items-center w-full\">\n                                <div class=\"font-semibold text-sm ml-4 truncate-from\">\n                                    {{ from }} \n                                </div>\n                                <div class=\"flex items-center justify-between\">\n                                    <div class=\"mr-1.5 text-sm font-semibold truncate-subject\">\n                                        {{ subject }}\n                                    </div>\n                                    <div class=\"text-sm text-gray-500 truncate-body pr-2\">\n                                        - {{ body }}...\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"text-right truncate mr-4 w-full text-xs font-semibold\">{{ time }}</div>\n                        </div>\n                    </router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { defineProps, defineEmits, toRefs, watch, ref } from \"vue\";\nimport CheckboxOutlineIcon from \"vue-material-design-icons/CheckboxOutline.vue\";\nimport CheckboxBlankOutlineIcon from \"vue-material-design-icons/CheckboxBlankOutline.vue\";\nimport StarOutlineIcon from \"vue-material-design-icons/StarOutline.vue\";\n\nconst emit = defineEmits(['selectedId'])\n\nlet isSelected = ref(false)\n\nconst props = defineProps({\n  id: String,\n  from: String,\n  subject: String,\n  body: String,\n  time: String,\n  hasViewed: Boolean\n});\n\nconst { id, from, subject, body, time } = toRefs(props);\n\nwatch(isSelected, (bool) => {\n    emit('selectedId', { id: id.value, bool: bool})\n})\n</script>\n\n<style lang=\"scss\">\n#MessageRow {\n    .truncate-from {\n        width: 170px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n    .truncate-subject {\n        max-width: 200px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n    .truncate-body {\n        max-width: 400px;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}