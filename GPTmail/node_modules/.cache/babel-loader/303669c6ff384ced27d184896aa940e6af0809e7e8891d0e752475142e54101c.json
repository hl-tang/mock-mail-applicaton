{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent } from \"vue\";\nimport { toRefs } from \"vue\";\n//import MenuIcon from \"vue-material-design-icons/Menu.vue\";\nimport { Menu } from '@element-plus/icons-vue';\nimport MagnifyIcon from \"vue-material-design-icons/Magnify.vue\";\nimport TuneIcon from \"vue-material-design-icons/Tune.vue\";\nimport HelpIcon from \"vue-material-design-icons/Help.vue\";\nimport CogOutlineIcon from \"vue-material-design-icons/CogOutline.vue\";\nimport AppsIcon from \"vue-material-design-icons/Apps.vue\";\nimport ArrowLeftIcon from \"vue-material-design-icons//ArrowLeft.vue\";\nimport TrashCanOutlineIcon from \"vue-material-design-icons//TrashCanOutline.vue\";\nexport default {\n  __name: 'IconComponent',\n  props: {\n    iconString: String,\n    iconColor: String,\n    iconSize: Number,\n    text: String,\n    hoverColor: String\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    _createVNode(_resolveComponent(\"el-icon\"), null, {\n      default: () => [_createVNode(_resolveComponent(\"Minus\"), null, null)]\n    });\n    const {\n      iconString,\n      iconColor,\n      text,\n      hoverColor\n    } = toRefs(props);\n    let icon = null;\n    if (iconString.value === 'menu') {\n      //icon = MenuIcon\n      icon = Menu;\n    }\n    if (iconString.value === 'magnify') {\n      icon = MagnifyIcon;\n    }\n    if (iconString.value === 'tune') {\n      icon = TuneIcon;\n    }\n    if (iconString.value === 'help') {\n      icon = HelpIcon;\n    }\n    if (iconString.value === 'cog') {\n      icon = CogOutlineIcon;\n    }\n    if (iconString.value === 'apps') {\n      icon = AppsIcon;\n    }\n    if (iconString.value === 'back') {\n      icon = ArrowLeftIcon;\n    }\n    if (iconString.value === 'trash') {\n      icon = TrashCanOutlineIcon;\n    }\n    const __returned__ = {\n      props,\n      iconString,\n      iconColor,\n      text,\n      hoverColor,\n      get icon() {\n        return icon;\n      },\n      set icon(v) {\n        icon = v;\n      },\n      toRefs,\n      get Menu() {\n        return Menu;\n      },\n      MagnifyIcon,\n      TuneIcon,\n      HelpIcon,\n      CogOutlineIcon,\n      AppsIcon,\n      ArrowLeftIcon,\n      TrashCanOutlineIcon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AA8CE,SAAsBA,MAAM,QAAQ,KAAK;AACzC;AACA,SAAQC,IAAI,QAAO,yBAAyB;AAE5C,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,cAAc,MAAM,0CAA0C;AACrE,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,mBAAmB,MAAM,gDAAgD;;;;;;;;;;;;;;;IAPhF;MAAA;IAAA;IAgBA,MAAM;MAAEC,UAAU;MAAEC,SAAS;MAAEC,IAAI;MAAEC;IAAW,CAAC,GAAGZ,MAAM,CAACa,KAAK,CAAC;IAEjE,IAAIC,IAAI,GAAG,IAAI;IAEf,IAAIL,UAAU,CAACM,KAAK,KAAK,MAAM,EAAE;MAC/B;MACAD,IAAI,GAAGb,IAAI;IACb;IAEA,IAAIQ,UAAU,CAACM,KAAK,KAAK,SAAS,EAAE;MAClCD,IAAI,GAAGZ,WAAW;IACpB;IAEA,IAAIO,UAAU,CAACM,KAAK,KAAK,MAAM,EAAE;MAC/BD,IAAI,GAAGX,QAAQ;IACjB;IAEA,IAAIM,UAAU,CAACM,KAAK,KAAK,MAAM,EAAE;MAC/BD,IAAI,GAAGV,QAAQ;IACjB;IAEA,IAAIK,UAAU,CAACM,KAAK,KAAK,KAAK,EAAE;MAC9BD,IAAI,GAAGT,cAAc;IACvB;IAEA,IAAII,UAAU,CAACM,KAAK,KAAK,MAAM,EAAE;MAC/BD,IAAI,GAAGR,QAAQ;IACjB;IAEA,IAAIG,UAAU,CAACM,KAAK,KAAK,MAAM,EAAE;MAC/BD,IAAI,GAAGP,aAAa;IACtB;IAEA,IAAIE,UAAU,CAACM,KAAK,KAAK,OAAO,EAAE;MAChCD,IAAI,GAAGN,mBAAmB;IAC5B","names":["toRefs","Menu","MagnifyIcon","TuneIcon","HelpIcon","CogOutlineIcon","AppsIcon","ArrowLeftIcon","TrashCanOutlineIcon","iconString","iconColor","text","hoverColor","props","icon","value"],"sources":["/home/hl_tang/Code/VSCodeWorkSpace/GPTmail/src/components/IconComponent.vue"],"sourcesContent":["<template>\n  <div id=\"IconComponent\" v-if=\"iconString\">\n    <div \n      class=\"\n        flex \n        items-center \n        justify-center \n        rounded-full \n        cursor-pointer\n        w-10 \n        h-10  \n      \"\n      :class=\"[hoverColor]\"\n      :data-tooltip-target=\"`tooltip-no-arrow-${iconString}`\"\n      data-tooltip-placement=\"bottom\"\n    >\n      <component :is=\"icon\" :size=\"iconSize\" :fillColor=\"iconColor\"/>\n    </div>\n\n    <div \n      :id=\"`tooltip-no-arrow-${iconString}`\" \n      role=\"tooltip\" \n      class=\"\n        inline-block \n        absolute \n        invisible \n        text-xs \n        z-10 \n        py-1 \n        px-2 \n        font-medium \n        text-white \n        rounded-sm \n        shadow-sm \n        opacity-0 \n        tooltip \n        dark:bg-gray-600\n        delay-150\n      \"\n    >\n        {{ text }}\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { defineProps, toRefs } from \"vue\";\n  //import MenuIcon from \"vue-material-design-icons/Menu.vue\";\n  import {Menu} from '@element-plus/icons-vue'\n  <el-icon><Minus /></el-icon>\n  import MagnifyIcon from \"vue-material-design-icons/Magnify.vue\";\n  import TuneIcon from \"vue-material-design-icons/Tune.vue\";\n  import HelpIcon from \"vue-material-design-icons/Help.vue\";\n  import CogOutlineIcon from \"vue-material-design-icons/CogOutline.vue\";\n  import AppsIcon from \"vue-material-design-icons/Apps.vue\";\n  import ArrowLeftIcon from \"vue-material-design-icons//ArrowLeft.vue\";\n  import TrashCanOutlineIcon from \"vue-material-design-icons//TrashCanOutline.vue\";\n\n  const props = defineProps({\n    iconString: String,\n    iconColor: String,\n    iconSize: Number,\n    text: String,\n    hoverColor: String,\n  })\n  const { iconString, iconColor, text, hoverColor } = toRefs(props)\n\n  let icon = null\n\n  if (iconString.value === 'menu') {\n    //icon = MenuIcon\n    icon = Menu\n  }\n\n  if (iconString.value === 'magnify') {\n    icon = MagnifyIcon\n  }\n\n  if (iconString.value === 'tune') {\n    icon = TuneIcon\n  }\n\n  if (iconString.value === 'help') {\n    icon = HelpIcon\n  }\n\n  if (iconString.value === 'cog') {\n    icon = CogOutlineIcon\n  }\n\n  if (iconString.value === 'apps') {\n    icon = AppsIcon\n  }\n\n  if (iconString.value === 'back') {\n    icon = ArrowLeftIcon\n  }\n\n  if (iconString.value === 'trash') {\n    icon = TrashCanOutlineIcon\n  }\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}