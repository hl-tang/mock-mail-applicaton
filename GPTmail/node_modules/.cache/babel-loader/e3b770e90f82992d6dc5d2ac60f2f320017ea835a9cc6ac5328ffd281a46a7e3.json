{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useUserStore } from \"@/store/user-store\";\nimport IconComponent from \"@/components/IconComponent.vue\";\nexport default {\n  __name: 'MessageView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const route = useRoute();\n    const router = useRouter();\n    const userStore = useUserStore();\n    let email = ref({});\n    onMounted(async () => {\n      const res = await userStore.getEmailById(route.params.id);\n      await userStore.emailHasBeenViewed(res.id);\n      email.value = {\n        id: res.id,\n        body: res.body,\n        createdAt: res.createdAt,\n        firstName: res.firstName,\n        fromEmail: res.fromEmail,\n        lastName: res.lastName,\n        subject: res.subject,\n        hasViewed: res.hasViewed,\n        toEmail: res.toEmail\n      };\n    });\n    const deleteEmail = async id => {\n      let res = confirm(\"Are you sure you want to delete this?\");\n      if (res) {\n        await userStore.deleteEmail(id);\n        setTimeout(() => {\n          router.push('/email');\n        }, 250);\n      }\n    };\n    const __returned__ = {\n      route,\n      router,\n      userStore,\n      get email() {\n        return email;\n      },\n      set email(v) {\n        email = v;\n      },\n      deleteEmail,\n      onMounted,\n      ref,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useUserStore() {\n        return useUserStore;\n      },\n      IconComponent\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AAwDE,SAASA,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,aAAa,MAAM,gCAAgC;;;;;;;IAE1D,MAAMC,KAAK,GAAGJ,QAAQ,EAAE;IACxB,MAAMK,MAAM,GAAGJ,SAAS,EAAE;IAC1B,MAAMK,SAAS,GAAGJ,YAAY,EAAE;IAEhC,IAAIK,KAAK,GAAGR,GAAG,CAAC,CAAC,CAAC,CAAC;IAEnBD,SAAS,CAAC,YAAY;MACpB,MAAMU,GAAG,GAAG,MAAMF,SAAS,CAACG,YAAY,CAACL,KAAK,CAACM,MAAM,CAACC,EAAE,CAAC;MAEzD,MAAML,SAAS,CAACM,kBAAkB,CAACJ,GAAG,CAACG,EAAE,CAAC;MAE1CJ,KAAK,CAACM,KAAK,GAAG;QACZF,EAAE,EAAEH,GAAG,CAACG,EAAE;QACVG,IAAI,EAAEN,GAAG,CAACM,IAAI;QACdC,SAAS,EAAEP,GAAG,CAACO,SAAS;QACxBC,SAAS,EAAER,GAAG,CAACQ,SAAS;QACxBC,SAAS,EAAET,GAAG,CAACS,SAAS;QACxBC,QAAQ,EAAEV,GAAG,CAACU,QAAQ;QACtBC,OAAO,EAAEX,GAAG,CAACW,OAAO;QACpBC,SAAS,EAAEZ,GAAG,CAACY,SAAS;QACxBC,OAAO,EAAEb,GAAG,CAACa;MACf,CAAC;IACH,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAG,MAAOX,EAAE,IAAK;MAChC,IAAIH,GAAG,GAAGe,OAAO,CAAC,uCAAuC,CAAC;MAC1D,IAAIf,GAAG,EAAE;QACP,MAAMF,SAAS,CAACgB,WAAW,CAACX,EAAE,CAAC;QAC/Ba,UAAU,CAAC,MAAM;UAAEnB,MAAM,CAACoB,IAAI,CAAC,QAAQ,CAAC;QAAC,CAAC,EAAE,GAAG,CAAC;MAClD;IAEF,CAAC","names":["onMounted","ref","useRoute","useRouter","useUserStore","IconComponent","route","router","userStore","email","res","getEmailById","params","id","emailHasBeenViewed","value","body","createdAt","firstName","fromEmail","lastName","subject","hasViewed","toEmail","deleteEmail","confirm","setTimeout","push"],"sources":["/home/hl_tang/Code/VSCodeWorkSpace/GPTmail/src/views/MessageView.vue"],"sourcesContent":["<template>\n  <div\n    id=\"SingleMessageSection\"\n    class=\"w-full bg-white ml-2 rounded-t-xl h-full shadow-sm\"\n  >\n    <div class=\"border-b\">\n      <div class=\"flex items-center justify-between px-1.5 py-0.5\">\n        <div class=\"flex\">\n          <router-link to=\"/email\">\n            <IconComponent\n              iconString=\"back\"\n              :iconSize=\"19\"\n              iconColor=\"#636363\"\n              text=\"Back to inbox\"\n              hoverColor=\"hover:bg-gray-100\"\n            />\n          </router-link>\n\n          <IconComponent\n            @click=\"deleteEmail(email.id)\"\n            iconString=\"trash\"\n            :iconSize=\"19\"\n            iconColor=\"#636363\"\n            text=\"Delete\"\n            hoverColor=\"hover:bg-gray-100\"\n            class=\"ml-3\"\n          />\n        </div>\n        <div class=\"text-xs text-gray-500\">1-50 of 153</div>\n      </div>\n    </div>\n\n    <div class=\"w-full text-xl ml-20 font-light pt-5\">\n      {{ email.subject }}\n    </div>\n\n    <div class=\"w-full flex\">\n      <img\n        class=\"rounded-full mt-8 mx-5 custom-img\"\n        src=\"https://via.placeholder.com/45\"\n      />\n      <div class=\"w-full my-4 mx-0.5\">\n        <div class=\"font-semibold text-sm mt-4 mb-4\">\n          <div class=\"w-full flex justify-between items-center\">\n            <div>{{ email.fromEmail }}</div>\n            <div class=\"mr-5 text-xs font-normal\">{{ email.createdAt }}</div>\n          </div>\n          <span class=\"text-xs text-gray-500 font-normal\">to me</span>\n        </div>\n        <div>{{ email.body }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted, ref } from \"vue\";\n  import { useRoute, useRouter } from \"vue-router\";\n  import { useUserStore } from \"@/store/user-store\";\n  import IconComponent from \"@/components/IconComponent.vue\";\n\n  const route = useRoute()\n  const router = useRouter()\n  const userStore = useUserStore()\n\n  let email = ref({})\n\n  onMounted(async () => {\n    const res = await userStore.getEmailById(route.params.id)\n\n    await userStore.emailHasBeenViewed(res.id)\n\n    email.value = {\n      id: res.id,\n      body: res.body,\n      createdAt: res.createdAt,\n      firstName: res.firstName,\n      fromEmail: res.fromEmail,\n      lastName: res.lastName,\n      subject: res.subject,\n      hasViewed: res.hasViewed,\n      toEmail: res.toEmail\n    }\n  })\n\n  const deleteEmail = async (id) => {\n    let res = confirm(\"Are you sure you want to delete this?\");\n    if (res) { \n      await userStore.deleteEmail(id)\n      setTimeout(() => { router.push('/email') }, 250)\n    }\n\n  }\n</script>\n\n<style lang=\"scss\" setup>\n#SingleMessageSection {\n  .custom-img {\n    width: 40px;\n    height: 40px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}